{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-8ec95e7e\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Аналитика\", -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"section\", {\n  class: \"charts__section\"\n}, [/*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"charts__title\"\n}, \"Аналитика по визитам\"), /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"root\",\n  class: \"charts__root\"\n})], -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;gEACIA,oBAAkB,IAAlB,EAAkB,IAAlB,EAAI,WAAJ,EAAa;AAAA;AAAb;;gEACAA,oBAGU,SAHV,EAGU;EAHDC,KAAK,EAAC;AAGL,CAHV,EAAgC,cAC5BD,oBAAmD,IAAnD,EAAmD;EAA/CC,KAAK,EAAC;AAAyC,CAAnD,EAA0B,sBAA1B,CAD4B,eAE5BD,oBAA0C,KAA1C,EAA0C;EAArCE,EAAE,EAAC,MAAkC;EAA3BD,KAAK,EAAC;AAAqB,CAA1C,CAF4B,CAAhC;;AAAA;;;6DADAE,YACAC","names":["_createElementVNode","class","id","_hoisted_1","_hoisted_2"],"sourceRoot":"","sources":["D:\\lead-hit\\src\\pages\\AnalyticsPage.vue"],"sourcesContent":["<template>\r\n    <h1>Аналитика</h1>\r\n    <section class=\"charts__section\">\r\n        <h2 class=\"charts__title\">Аналитика по визитам</h2>\r\n        <div id=\"root\" class=\"charts__root\"></div>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\n\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\n\r\nexport default {\r\n    name: 'AnalyticsPage',\r\n\r\n    beforeCreate() {\r\n        if (!localStorage.getItem('leadhit-site-id')) {\r\n            this.$router.push({ name: \"home\" });\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n    \r\n        const data = this.$store.state.date.map(e => ({\r\n            date: Date.parse(e.date),\r\n            value: e.visits\r\n        }));\r\n\r\n        const root = am5.Root.new(\"root\");\r\n        root.setThemes([am5themes_Animated.new(root)]);\r\n\r\n        const chart = root.container.children.push(\r\n            am5xy.XYChart.new(root, {\r\n                panY: false,\r\n                wheelY: \"zoomX\",\r\n                layout: root.verticalLayout,\r\n                maxTooltipDistance: 1\r\n            })\r\n        );\r\n\r\n        // Create Y-axis\r\n        const yAxis = chart.yAxes.push(\r\n            am5xy.ValueAxis.new(root, {\r\n                extraTooltipPrecision: 1,\r\n                renderer: am5xy.AxisRendererY.new(root, {})\r\n            })\r\n        );\r\n\r\n        // Create X-Axis\r\n        const xAxis = chart.xAxes.push(\r\n            am5xy.DateAxis.new(root, {\r\n                baseInterval: { timeUnit: \"day\", count: 1 },\r\n                renderer: am5xy.AxisRendererX.new(root, {})\r\n            })\r\n        );\r\n\r\n        xAxis.get(\"dateFormats\")[\"day\"] = \"MM/dd\";\r\n        xAxis.get(\"periodChangeDateFormats\")[\"day\"] = \"MMMM\";\r\n\r\n        // Create series\r\n        function createSeries(name, field) {\r\n            const series = chart.series.push(\r\n                am5xy.LineSeries.new(root, {\r\n                    name: name,\r\n                    xAxis: xAxis,\r\n                    yAxis: yAxis,\r\n                    valueYField: field,\r\n                    valueXField: \"date\",\r\n                    tooltip: am5.Tooltip.new(root, {})\r\n                })\r\n            );\r\n\r\n            series.bullets.push(function () {\r\n                return am5.Bullet.new(root, {\r\n                    sprite: am5.Circle.new(root, {\r\n                        radius: 6,\r\n                        fill: series.get(\"fill\")\r\n                    })\r\n                });\r\n            });\r\n\r\n            series.strokes.template.set(\"strokeWidth\", 2);\r\n\r\n            series.get(\"tooltip\").label.set(\"text\", \"[bold]{name}[/]\\n{valueX.formatDate()}: {valueY}\")\r\n            series.data.setAll(data);\r\n        }\r\n\r\n        createSeries(\"Series\", \"value\");\r\n\r\n        // Add cursor\r\n        chart.set(\"cursor\", am5xy.XYCursor.new(root, {\r\n            behavior: \"zoomXY\",\r\n            xAxis: xAxis\r\n        }));\r\n\r\n        xAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n            themeTags: [\"axis\"]\r\n        }));\r\n\r\n        yAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n            themeTags: [\"axis\"]\r\n        }));\r\n        \r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.charts__root {\r\n    width: 100%;\r\n    height: 60vh;\r\n    margin: auto;\r\n}\r\n.charts__section {\r\n    border: 2px solid rgba(205, 162, 205, 0.291);\r\n    border-radius: 14px;\r\n   background-color: rgba(162, 108, 157, 0.134);\r\n}\r\n\r\n.charts__title {\r\n    color: blue;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}