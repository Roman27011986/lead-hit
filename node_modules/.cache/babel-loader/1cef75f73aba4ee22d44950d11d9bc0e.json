{"ast":null,"code":"import { getAuth } from \"../../services/auth.service\";\nimport { emailValidation } from \"../../utils/validationRules\";\nexport default {\n  data() {\n    return {\n      id: \"\"\n    };\n  },\n\n  methods: {\n    async handleSubmit() {\n      this.$emit(\"submit\", {\n        id: this.id\n      });\n\n      try {\n        const {\n          data\n        } = await getAuth(this.id);\n        this.$router.push({\n          name: \"analytics\"\n        });\n\n        if (data?.message) {\n          localStorage.setItem('leadhit-site-id', this.id);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  },\n  computed: {\n    rules() {\n      return {\n        emailValidation\n      };\n    },\n\n    emailRules() {\n      return [this.rules.isRequired, this.rules.emailValidation];\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAQA,SAASA,OAAT,QAAwB,6BAAxB;AACA,SACIC,eADJ,QAEO,6BAFP;AAGA,eAAe;EACXC,IAAI,GAAG;IACH,OAAO;MACHC,EAAE,EAAE;IADD,CAAP;EAGH,CALU;;EAOXC,OAAO,EAAE;IACN,MAAMC,YAAN,GAAqB;MAChB,KAAKC,KAAL,CAAW,QAAX,EAAqB;QACjBH,EAAE,EAAE,KAAKA;MADQ,CAArB;;MAGA,IAAI;QACA,MAAM;UAAED;QAAF,IAAW,MAAMF,OAAO,CAAC,KAAKG,EAAN,CAA9B;QACA,KAAKI,OAAL,CAAaC,IAAb,CAAkB;UAAEC,IAAI,EAAE;QAAR,CAAlB;;QACA,IAAIP,IAAI,EAAEQ,OAAV,EAAmB;UACfC,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwC,KAAKT,EAA7C;QACJ;MACJ,CANA,CAME,OAAOU,KAAP,EAAc;QACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACJ;IACH;;EAdI,CAPE;EAwBXG,QAAQ,EAAE;IACNC,KAAK,GAAG;MACJ,OAAO;QACHhB;MADG,CAAP;IAGH,CALK;;IAONiB,UAAU,GAAG;MACT,OAAO,CAAC,KAAKD,KAAL,CAAWE,UAAZ,EAAwB,KAAKF,KAAL,CAAWhB,eAAnC,CAAP;IACH;;EATK;AAxBC,CAAf","names":["getAuth","emailValidation","data","id","methods","handleSubmit","$emit","$router","push","name","message","localStorage","setItem","error","console","log","computed","rules","emailRules","isRequired"],"sourceRoot":"","sources":["D:\\lead-hit\\src\\components\\form\\AuthForm.vue"],"sourcesContent":["<template>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n        <input v-model=\"id\" class=\"custom-input\" :rules=\"passwordRules\" :class=\"!isValid && 'custom-input--error'\" />\r\n        <button type=\"submit\">Подбор жилья</button>\r\n    </form>\r\n</template>\r\n\r\n<script>\r\nimport { getAuth } from \"../../services/auth.service\";\r\nimport {\r\n    emailValidation,\r\n} from \"../../utils/validationRules\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            id: \"\",\r\n        };\r\n    },\r\n    \r\n    methods: {\r\n       async handleSubmit() {\r\n            this.$emit(\"submit\", {\r\n                id: this.id,\r\n            });\r\n            try {\r\n                const { data } = await getAuth(this.id);\r\n                this.$router.push({ name: \"analytics\" });\r\n                if (data?.message) {\r\n                    localStorage.setItem('leadhit-site-id', this.id )\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        },\r\n    },\r\n\r\n    computed: {\r\n        rules() {\r\n            return {\r\n                emailValidation,\r\n            };\r\n        },\r\n\r\n        emailRules() {\r\n            return [this.rules.isRequired, this.rules.emailValidation];\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n   .custom-input {\r\n       min-height: 40px;\r\n        font-size: 18px;\r\n        outline: none;\r\n        line-height: inherit;\r\n        padding: 8px 15px;\r\n   }\r\n\r\n        .custom-input::placeholder {\r\n            color: inherit;\r\n        }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}