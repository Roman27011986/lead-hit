{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-8ec95e7e\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"hello\",\n  id: \"root\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, \" Analytics \");\n}","map":{"version":3,"mappings":";;;;;EACSA,KAAK,EAAC;EAAQC,EAAE,EAAC;;;uBAAtBC,oBAEM,KAFN,cAA6B,aAA7B","names":["class","id","_createElementBlock"],"sourceRoot":"","sources":["D:\\lead-hit\\src\\pages\\AnalyticsPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"hello\" id=\"root\">\r\n       Analytics\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport * as am5 from \"@amcharts/amcharts5\";\r\nimport * as am5xy from \"@amcharts/amcharts5/xy\";\r\nimport am5themes_Animated from \"@amcharts/amcharts5/themes/Animated\";\r\n// import am5themes_Micro from \"@amcharts/amcharts5/themes/Micro\";\r\nexport default {\r\n    name: 'AnalyticsPage',\r\n\r\n    beforeCreate() {\r\n        if (!localStorage.getItem('leadhit-site-id')) {\r\n            this.$router.push({ name: \"home\" });\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        console.log(this.$store.state);\r\n        const data1 = this.$store.state.rate.reduce((acc, e) => {\r\n            return acc = { date: e['date'] }\r\n        }, [])\r\n        console.log(data1);\r\n        let root = am5.Root.new(\"root\");\r\n        root.setThemes([am5themes_Animated.new(root)]);\r\n\r\n        var chart = root.container.children.push(\r\n            am5xy.XYChart.new(root, {\r\n                panY: false,\r\n                wheelY: \"zoomX\",\r\n                layout: root.verticalLayout,\r\n                maxTooltipDistance: 0\r\n            })\r\n        );\r\n\r\n        // Define data\r\n        \r\n        var data = [{\r\n            date: new Date(2021, 0, 1).getTime(),\r\n            value:777\r\n        }, {\r\n            date: new Date(2021, 0, 2).getTime(),\r\n            value: 320\r\n        }, {\r\n            date: new Date(2021, 0, 3).getTime(),\r\n            value: 216\r\n        }, {\r\n            date: new Date(2021, 0, 4).getTime(),\r\n            value: 150\r\n        }, {\r\n            date: new Date(2021, 0, 5).getTime(),\r\n            value: 156\r\n        }, {\r\n            date: new Date(2021, 0, 6).getTime(),\r\n            value: 199\r\n        }, {\r\n            date: new Date(2021, 0, 7).getTime(),\r\n            value: 114\r\n        }, {\r\n            date: new Date(2021, 0, 8).getTime(),\r\n            value: 269\r\n        }, {\r\n            date: new Date(2021, 0, 9).getTime(),\r\n            value: 90\r\n        }, {\r\n            date: new Date(2021, 0, 10).getTime(),\r\n            value: 300\r\n        }, {\r\n            date: new Date(2021, 0, 11).getTime(),\r\n            value: 150\r\n        }, {\r\n            date: new Date(2021, 0, 12).getTime(),\r\n            value: 110\r\n        }, {\r\n            date: new Date(2021, 0, 13).getTime(),\r\n            value: 185\r\n        }, {\r\n            date: new Date(2021, 0, 14).getTime(),\r\n            value: 105\r\n            }];\r\n\r\n        \r\n\r\n        // Create Y-axis\r\n        var yAxis = chart.yAxes.push(\r\n            am5xy.ValueAxis.new(root, {\r\n                extraTooltipPrecision: 1,\r\n                renderer: am5xy.AxisRendererY.new(root, {})\r\n            })\r\n        );\r\n\r\n        // Create X-Axis\r\n        let xAxis = chart.xAxes.push(\r\n            am5xy.DateAxis.new(root, {\r\n                baseInterval: { timeUnit: \"day\", count: 1 },\r\n                renderer: am5xy.AxisRendererX.new(root, {})\r\n            })\r\n        );\r\n\r\n        xAxis.get(\"dateFormats\")[\"day\"] = \"MM/dd\";\r\n        xAxis.get(\"periodChangeDateFormats\")[\"day\"] = \"MMMM\";\r\n\r\n        // Create series\r\n        function createSeries(name, field) {\r\n            var series = chart.series.push(\r\n                am5xy.LineSeries.new(root, {\r\n                    name: name,\r\n                    xAxis: xAxis,\r\n                    yAxis: yAxis,\r\n                    valueYField: field,\r\n                    valueXField: \"date\",\r\n                    tooltip: am5.Tooltip.new(root, {})\r\n                })\r\n            );\r\n\r\n            series.bullets.push(function () {\r\n                return am5.Bullet.new(root, {\r\n                    sprite: am5.Circle.new(root, {\r\n                        radius: 5,\r\n                        fill: series.get(\"fill\")\r\n                    })\r\n                });\r\n            });\r\n\r\n            series.strokes.template.set(\"strokeWidth\", 2);\r\n\r\n            series.get(\"tooltip\").label.set(\"text\", \"[bold]{name}[/]\\n{valueX.formatDate()}: {valueY}\")\r\n            series.data.setAll(data);\r\n        }\r\n\r\n        createSeries(\"Series\", \"value\");\r\n\r\n        // Add cursor\r\n        chart.set(\"cursor\", am5xy.XYCursor.new(root, {\r\n            behavior: \"zoomXY\",\r\n            xAxis: xAxis\r\n        }));\r\n\r\n        xAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n            themeTags: [\"axis\"]\r\n        }));\r\n\r\n        yAxis.set(\"tooltip\", am5.Tooltip.new(root, {\r\n            themeTags: [\"axis\"]\r\n        }));\r\n\r\n       \r\n        \r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n\r\n.hello{\r\n    width: 1200px;\r\n    height: 300px;\r\n    margin: auto;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}