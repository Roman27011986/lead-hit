{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { MovingAverage } from \"./MovingAverage\";\nimport { LineSeries } from \"../../xy/series/LineSeries\";\nimport * as $array from \"../../../core/util/Array\";\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\n\nvar MovingAverageEnvelope =\n/** @class */\nfunction (_super) {\n  __extends(MovingAverageEnvelope, _super);\n\n  function MovingAverageEnvelope() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * Indicator series for the upper band.\r\n     */\n\n\n    Object.defineProperty(_this, \"upperBandSeries\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    /**\r\n     * Indicator series for the lower band.\r\n     */\n\n    Object.defineProperty(_this, \"lowerBandSeries\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"_editableSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [{\n        key: \"period\",\n        name: _this.root.language.translateAny(\"Period\"),\n        type: \"number\"\n      }, {\n        key: \"type\",\n        name: _this.root.language.translateAny(\"Type\"),\n        type: \"dropdown\",\n        options: [\"simple\", \"weighted\", \"exponential\", \"dema\", \"tema\"]\n      }, {\n        key: \"field\",\n        name: _this.root.language.translateAny(\"Field\"),\n        type: \"dropdown\",\n        options: [\"open\", \"close\", \"low\", \"high\", \"hl/2\", \"hlc/3\", \"hlcc/4\", \"ohlc/4\"]\n      }, {\n        key: \"shiftType\",\n        name: _this.root.language.translateAny(\"Shift type\"),\n        type: \"dropdown\",\n        options: [\"percent\", \"points\"]\n      }, {\n        key: \"shift\",\n        name: _this.root.language.translateAny(\"Shift\"),\n        type: \"number\"\n      }, {\n        key: \"offset\",\n        name: _this.root.language.translateAny(\"Offset\"),\n        type: \"number\"\n      }, {\n        key: \"upperColor\",\n        name: _this.root.language.translateAny(\"Top\"),\n        type: \"color\"\n      }, {\n        key: \"seriesColor\",\n        name: _this.root.language.translateAny(\"Median\"),\n        type: \"color\"\n      }, {\n        key: \"lowerColor\",\n        name: _this.root.language.translateAny(\"Bottom\"),\n        type: \"color\"\n      }]\n    });\n    return _this;\n  }\n\n  Object.defineProperty(MovingAverageEnvelope.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var stockSeries = this.get(\"stockSeries\");\n      var chart = stockSeries.chart;\n\n      if (chart) {\n        var upperBandSeries = chart.series.push(LineSeries.new(this._root, {\n          valueXField: \"valueX\",\n          valueYField: \"upper\",\n          openValueYField: \"lower\",\n          xAxis: stockSeries.get(\"xAxis\"),\n          yAxis: stockSeries.get(\"yAxis\"),\n          groupDataDisabled: true,\n          calculateAggregates: true,\n          themeTags: [\"movingaverageenvelope\", \"upper\"]\n        }));\n        upperBandSeries.fills.template.set(\"visible\", true);\n        upperBandSeries.setPrivate(\"baseValueSeries\", stockSeries);\n        this.upperBandSeries = upperBandSeries;\n        var lowerBandSeries = chart.series.push(LineSeries.new(this._root, {\n          valueXField: \"valueX\",\n          valueYField: \"lower\",\n          xAxis: stockSeries.get(\"xAxis\"),\n          yAxis: stockSeries.get(\"yAxis\"),\n          groupDataDisabled: true,\n          calculateAggregates: true,\n          themeTags: [\"movingaverageenvelope\", \"lower\"]\n        }));\n        lowerBandSeries.setPrivate(\"baseValueSeries\", stockSeries);\n        this.lowerBandSeries = lowerBandSeries;\n      }\n\n      _super.prototype._afterNew.call(this);\n\n      this.series.addTag(\"movingaverageenvelope\");\n\n      this.series._applyThemes();\n    }\n  });\n  Object.defineProperty(MovingAverageEnvelope.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._updateChildren.call(this);\n\n      if (this.isDirty(\"upperColor\")) {\n        var color = this.get(\"upperColor\");\n        var upperBandSeries = this.upperBandSeries;\n        upperBandSeries.set(\"stroke\", color);\n        upperBandSeries.set(\"fill\", color);\n        upperBandSeries.strokes.template.set(\"stroke\", color);\n\n        this._updateSeriesColor(upperBandSeries, color, \"upperColor\");\n      }\n\n      if (this.isDirty(\"lowerColor\")) {\n        var color = this.get(\"lowerColor\");\n        var lowerBandSeries = this.lowerBandSeries;\n        lowerBandSeries.set(\"stroke\", color);\n        lowerBandSeries.strokes.template.set(\"stroke\", color);\n\n        this._updateSeriesColor(lowerBandSeries, color, \"lowerColor\");\n      }\n    }\n  });\n  Object.defineProperty(MovingAverageEnvelope.prototype, \"_prepareChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this.isDirty(\"shiftType\") || this.isDirty(\"shift\")) {\n        this._dataDirty = true;\n        this.setCustomData(\"shift\", this.get(\"shift\"));\n        this.setCustomData(\"shiftType\", this.get(\"shiftType\"));\n      }\n\n      _super.prototype._prepareChildren.call(this);\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(MovingAverageEnvelope.prototype, \"prepareData\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype.prepareData.call(this);\n\n      if (this.series) {\n        var smaData = this.series.data.values;\n        var shift_1 = Number(this.get(\"shift\", 5));\n        var shiftType_1 = this.get(\"shiftType\");\n        $array.each(smaData, function (dataItem) {\n          var value = dataItem.ma;\n\n          if (value != null) {\n            var upper = value;\n            var lower = value;\n\n            if (shiftType_1 == \"points\") {\n              upper += shift_1;\n              lower -= shift_1;\n            } else {\n              upper += upper * shift_1 / 100;\n              lower -= lower * shift_1 / 100;\n            }\n\n            dataItem.upper = upper;\n            dataItem.lower = lower;\n          }\n        });\n        this.upperBandSeries.data.setAll(smaData);\n        this.lowerBandSeries.data.setAll(smaData);\n      }\n    }\n  });\n  Object.defineProperty(MovingAverageEnvelope.prototype, \"_dispose\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.upperBandSeries.dispose();\n      this.lowerBandSeries.dispose();\n\n      _super.prototype._dispose.call(this);\n    }\n  });\n  Object.defineProperty(MovingAverageEnvelope, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"MovingAverageEnvelope\"\n  });\n  Object.defineProperty(MovingAverageEnvelope, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: MovingAverage.classNames.concat([MovingAverageEnvelope.className])\n  });\n  return MovingAverageEnvelope;\n}(MovingAverage);\n\nexport { MovingAverageEnvelope };","map":{"version":3,"mappings":"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","names":["MovingAverage","LineSeries","$array","__extends","Object","key","name","_this","root","language","translateAny","type","options","stockSeries","get","chart","upperBandSeries","series","push","new","_root","valueXField","valueYField","openValueYField","xAxis","yAxis","groupDataDisabled","calculateAggregates","themeTags","fills","template","set","setPrivate","lowerBandSeries","_super","_afterNew","call","addTag","_applyThemes","_updateChildren","isDirty","color","strokes","_updateSeriesColor","_dataDirty","setCustomData","_prepareChildren","prepareData","smaData","data","values","shift_1","Number","shiftType_1","each","dataItem","value","ma","upper","lower","setAll","dispose","_dispose","classNames","concat","MovingAverageEnvelope","className"],"sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/indicators/MovingAverageEnvelope.ts"],"sourcesContent":["import type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\n\r\nimport { MovingAverage, IMovingAverageSettings, IMovingAveragePrivate, IMovingAverageEvents } from \"./MovingAverage\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IMovingAverageEnvelopeSettings extends IMovingAverageSettings {\r\n\r\n\t/**\r\n\t * Shift.\r\n\t *\r\n\t * @default 5\r\n\t */\r\n\tshift?: number;\r\n\r\n\t/**\r\n\t * Type of the shift.\r\n\t *\r\n\t * @default \"percent\"\r\n\t */\r\n\tshiftType?: \"percent\" | \"points\";\r\n\r\n\t/**\r\n\t * A color for upper section.\r\n\t */\r\n\tupperColor?: Color;\r\n\r\n\t/**\r\n\t *  A color for lower section.\r\n\t */\r\n\tlowerColor?: Color;\r\n\r\n}\r\n\r\nexport interface IMovingAverageEnvelopePrivate extends IMovingAveragePrivate {\r\n}\r\n\r\nexport interface IMovingAverageEnvelopeEvents extends IMovingAverageEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class MovingAverageEnvelope extends MovingAverage {\r\n\tpublic static className: string = \"MovingAverageEnvelope\";\r\n\tpublic static classNames: Array<string> = MovingAverage.classNames.concat([MovingAverageEnvelope.className]);\r\n\r\n\tdeclare public _settings: IMovingAverageEnvelopeSettings;\r\n\tdeclare public _privateSettings: IMovingAverageEnvelopePrivate;\r\n\tdeclare public _events: IMovingAverageEnvelopeEvents;\r\n\r\n\t/**\r\n\t * Indicator series for the upper band.\r\n\t */\r\n\tpublic upperBandSeries!: LineSeries;\r\n\r\n\t/**\r\n\t * Indicator series for the lower band.\r\n\t */\r\n\tpublic lowerBandSeries!: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"type\",\r\n\t\tname: this.root.language.translateAny(\"Type\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\"simple\", \"weighted\", \"exponential\", \"dema\", \"tema\"]\r\n\t}, {\r\n\t\tkey: \"field\",\r\n\t\tname: this.root.language.translateAny(\"Field\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\"open\", \"close\", \"low\", \"high\", \"hl/2\", \"hlc/3\", \"hlcc/4\", \"ohlc/4\"]\r\n\t}, {\r\n\t\tkey: \"shiftType\",\r\n\t\tname: this.root.language.translateAny(\"Shift type\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\"percent\", \"points\"]\r\n\t}, {\r\n\t\tkey: \"shift\",\r\n\t\tname: this.root.language.translateAny(\"Shift\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"offset\",\r\n\t\tname: this.root.language.translateAny(\"Offset\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"upperColor\",\r\n\t\tname: this.root.language.translateAny(\"Top\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Median\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"lowerColor\",\r\n\t\tname: this.root.language.translateAny(\"Bottom\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tprotected _afterNew() {\r\n\r\n\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\tconst chart = stockSeries.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tconst upperBandSeries = chart.series.push(LineSeries.new(this._root, {\r\n\t\t\t\tvalueXField: \"valueX\",\r\n\t\t\t\tvalueYField: \"upper\",\r\n\t\t\t\topenValueYField: \"lower\",\r\n\t\t\t\txAxis: stockSeries.get(\"xAxis\"),\r\n\t\t\t\tyAxis: stockSeries.get(\"yAxis\"),\r\n\t\t\t\tgroupDataDisabled: true,\r\n\t\t\t\tcalculateAggregates: true,\r\n\t\t\t\tthemeTags: [\"movingaverageenvelope\", \"upper\"]\r\n\t\t\t}))\r\n\r\n\t\t\tupperBandSeries.fills.template.set(\"visible\", true);\r\n\t\t\tupperBandSeries.setPrivate(\"baseValueSeries\", stockSeries);\r\n\r\n\t\t\tthis.upperBandSeries = upperBandSeries;\r\n\r\n\t\t\tconst lowerBandSeries = chart.series.push(LineSeries.new(this._root, {\r\n\t\t\t\tvalueXField: \"valueX\",\r\n\t\t\t\tvalueYField: \"lower\",\r\n\t\t\t\txAxis: stockSeries.get(\"xAxis\"),\r\n\t\t\t\tyAxis: stockSeries.get(\"yAxis\"),\r\n\t\t\t\tgroupDataDisabled: true,\r\n\t\t\t\tcalculateAggregates: true,\r\n\t\t\t\tthemeTags: [\"movingaverageenvelope\", \"lower\"]\r\n\t\t\t}))\r\n\r\n\t\t\tlowerBandSeries.setPrivate(\"baseValueSeries\", stockSeries);\r\n\t\t\tthis.lowerBandSeries = lowerBandSeries;\r\n\t\t}\r\n\r\n\t\tsuper._afterNew();\r\n\t\tthis.series.addTag(\"movingaverageenvelope\");\r\n\t\tthis.series._applyThemes();\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\t\tif (this.isDirty(\"upperColor\")) {\r\n\t\t\tconst color = this.get(\"upperColor\");\r\n\t\t\tconst upperBandSeries = this.upperBandSeries;\r\n\t\t\tupperBandSeries.set(\"stroke\", color);\r\n\t\t\tupperBandSeries.set(\"fill\", color);\r\n\t\t\tupperBandSeries.strokes.template.set(\"stroke\", color);\r\n\r\n\t\t\tthis._updateSeriesColor(upperBandSeries, color, \"upperColor\");\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"lowerColor\")) {\r\n\t\t\tconst color = this.get(\"lowerColor\");\r\n\t\t\tconst lowerBandSeries = this.lowerBandSeries;\r\n\t\t\tlowerBandSeries.set(\"stroke\", color);\r\n\t\t\tlowerBandSeries.strokes.template.set(\"stroke\", color);\r\n\r\n\t\t\tthis._updateSeriesColor(lowerBandSeries, color, \"lowerColor\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tif (this.isDirty(\"shiftType\") || this.isDirty(\"shift\")) {\r\n\t\t\tthis._dataDirty = true;\r\n\t\t\tthis.setCustomData(\"shift\", this.get(\"shift\"));\r\n\t\t\tthis.setCustomData(\"shiftType\", this.get(\"shiftType\"));\r\n\t\t}\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tsuper.prepareData();\r\n\r\n\t\tif (this.series) {\r\n\t\t\tlet smaData = this.series.data.values as any;\r\n\t\t\tlet shift = Number(this.get(\"shift\", 5));\r\n\t\t\tlet shiftType = this.get(\"shiftType\");\r\n\r\n\t\t\t$array.each(smaData, (dataItem: any) => {\r\n\t\t\t\tlet value = dataItem.ma;\r\n\t\t\t\tif (value != null) {\r\n\t\t\t\t\tlet upper = value;\r\n\t\t\t\t\tlet lower = value;\r\n\t\t\t\t\tif (shiftType == \"points\") {\r\n\t\t\t\t\t\tupper += shift;\r\n\t\t\t\t\t\tlower -= shift;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tupper += upper * shift / 100;\r\n\t\t\t\t\t\tlower -= lower * shift / 100;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataItem.upper = upper;\r\n\t\t\t\t\tdataItem.lower = lower;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis.upperBandSeries.data.setAll(smaData);\r\n\t\t\tthis.lowerBandSeries.data.setAll(smaData);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _dispose() {\r\n\t\tthis.upperBandSeries.dispose();\r\n\t\tthis.lowerBandSeries.dispose();\r\n\t\tsuper._dispose();\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}