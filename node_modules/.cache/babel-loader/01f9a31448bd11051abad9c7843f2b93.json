{"ast":null,"code":"import { getAuth } from \"../../services/auth.service\";\nimport { emailValidation } from \"../../utils/validationRules.js\";\nexport default {\n  data() {\n    return {\n      id: \"\",\n      isValid: true,\n      error: \"\",\n      errorMessage: 'qweqeq'\n    };\n  },\n\n  methods: {\n    async handleSubmit() {\n      this.$emit(\"submit\", {\n        id: this.id\n      });\n\n      try {\n        const {\n          data\n        } = await getAuth(this.id);\n        this.$router.push({\n          name: \"analytics\"\n        });\n\n        if (data?.message) {\n          localStorage.setItem('leadhit-site-id', this.id);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    validete(value) {\n      console.log(value);\n      this.isValid = this.rules.emailValidation(rule => {\n        const {\n          hasPassed,\n          message\n        } = rule(value);\n        console.log(hasPassed);\n\n        if (!hasPassed) {\n          this.error = message || this.errorMessage;\n        }\n\n        return hasPassed;\n      });\n    } // reset() {\n    //     this.$$emit(\"input\", \"\");\n    // },\n\n\n  },\n  computed: {\n    rules() {\n      return {\n        emailValidation\n      };\n    },\n\n    emailRules() {\n      return [this.rules.isRequired, this.rules.emailValidation];\n    }\n\n  },\n  watch: {\n    id(v) {\n      this.validete(v);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AASA,SAASA,OAAT,QAAwB,6BAAxB;AACA,SACIC,eADJ,QAEO,gCAFP;AAGA,eAAe;EACXC,IAAI,GAAG;IACH,OAAO;MACHC,EAAE,EAAE,EADD;MAEHC,OAAO,EAAE,IAFN;MAGHC,KAAK,EAAE,EAHJ;MAIHC,YAAY,EAAC;IAJV,CAAP;EAMH,CARU;;EAUXC,OAAO,EAAE;IACN,MAAMC,YAAN,GAAqB;MAChB,KAAKC,KAAL,CAAW,QAAX,EAAqB;QACjBN,EAAE,EAAE,KAAKA;MADQ,CAArB;;MAGA,IAAI;QACA,MAAM;UAAED;QAAF,IAAW,MAAMF,OAAO,CAAC,KAAKG,EAAN,CAA9B;QACA,KAAKO,OAAL,CAAaC,IAAb,CAAkB;UAAEC,IAAI,EAAE;QAAR,CAAlB;;QACA,IAAIV,IAAI,EAAEW,OAAV,EAAmB;UACfC,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwC,KAAKZ,EAA7C;QACJ;MACJ,CANA,CAME,OAAOE,KAAP,EAAc;QACZW,OAAO,CAACC,GAAR,CAAYZ,KAAZ;MACJ;IACH,CAdI;;IAiBLa,QAAQ,CAACC,KAAD,EAAQ;MACZH,OAAO,CAACC,GAAR,CAAYE,KAAZ;MAEA,KAAKf,OAAL,GAAe,KAAKgB,KAAL,CAAWnB,eAAX,CAA4BoB,IAAD,IAAU;QAEhD,MAAM;UAAEC,SAAF;UAAaT;QAAb,IAAyBQ,IAAI,CAACF,KAAD,CAAnC;QACAH,OAAO,CAACC,GAAR,CAAYK,SAAZ;;QACA,IAAI,CAACA,SAAL,EAAgB;UACZ,KAAKjB,KAAL,GAAaQ,OAAM,IAAK,KAAKP,YAA7B;QACJ;;QACA,OAAOgB,SAAP;MACH,CARc,CAAf;IASH,CA7BI,CA+BL;IACA;IACA;;;EAjCK,CAVE;EA8CXC,QAAQ,EAAE;IACNH,KAAK,GAAG;MACJ,OAAO;QACHnB;MADG,CAAP;IAGH,CALK;;IAONuB,UAAU,GAAG;MACT,OAAO,CAAC,KAAKJ,KAAL,CAAWK,UAAZ,EAAwB,KAAKL,KAAL,CAAWnB,eAAnC,CAAP;IACH;;EATK,CA9CC;EA0DXyB,KAAK,EAAE;IACHvB,EAAE,CAACwB,CAAD,EAAI;MACF,KAAKT,QAAL,CAAcS,CAAd;IACH;;EAHE;AA1DI,CAAf","names":["getAuth","emailValidation","data","id","isValid","error","errorMessage","methods","handleSubmit","$emit","$router","push","name","message","localStorage","setItem","console","log","validete","value","rules","rule","hasPassed","computed","emailRules","isRequired","watch","v"],"sourceRoot":"","sources":["D:\\lead-hit\\src\\components\\form\\AuthForm.vue"],"sourcesContent":["<template>\r\n    <form @submit.prevent=\"handleSubmit\">\r\n        <input v-model=\"id\" class=\"custom-input\" />\r\n        <span v-if=\"!isValid\" class=\"custom-input__error\">{{ error }}</span>\r\n        <button type=\"submit\">Подбор жилья</button>\r\n    </form>\r\n</template>\r\n\r\n<script>\r\nimport { getAuth } from \"../../services/auth.service\";\r\nimport {\r\n    emailValidation,\r\n} from \"../../utils/validationRules.js\";\r\nexport default {\r\n    data() {\r\n        return {\r\n            id: \"\",\r\n            isValid: true,\r\n            error: \"\",\r\n            errorMessage:'qweqeq'\r\n        };\r\n    },\r\n    \r\n    methods: {\r\n       async handleSubmit() {\r\n            this.$emit(\"submit\", {\r\n                id: this.id,\r\n            });\r\n            try {\r\n                const { data } = await getAuth(this.id);\r\n                this.$router.push({ name: \"analytics\" });\r\n                if (data?.message) {\r\n                    localStorage.setItem('leadhit-site-id', this.id )\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        },\r\n\r\n\r\n        validete(value) {\r\n            console.log(value);\r\n           \r\n            this.isValid = this.rules.emailValidation((rule) => {\r\n                \r\n                const { hasPassed, message } = rule(value);\r\n                console.log(hasPassed);\r\n                if (!hasPassed) {\r\n                    this.error = message || this.errorMessage;\r\n                }\r\n                return hasPassed;\r\n            });\r\n        },\r\n\r\n        // reset() {\r\n        //     this.$$emit(\"input\", \"\");\r\n        // },\r\n    },\r\n\r\n    computed: {\r\n        rules() {\r\n            return {\r\n                emailValidation,\r\n            };\r\n        },\r\n\r\n        emailRules() {\r\n            return [this.rules.isRequired, this.rules.emailValidation];\r\n        },\r\n    },\r\n\r\n    watch: {\r\n        id(v) {\r\n            this.validete(v);\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n   .custom-input {\r\n       min-height: 40px;\r\n        font-size: 18px;\r\n        outline: none;\r\n        line-height: inherit;\r\n        padding: 8px 15px;\r\n   }\r\n\r\n        .custom-input::placeholder {\r\n            color: inherit;\r\n        }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}