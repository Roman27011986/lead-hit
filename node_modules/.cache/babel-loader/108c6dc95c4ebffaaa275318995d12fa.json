{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Color } from \"../../../core/util/Color\";\nimport { ChartIndicator } from \"./ChartIndicator\";\nimport { LineSeries } from \"../../xy/series/LineSeries\";\nimport * as $array from \"../../../core/util/Array\";\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\n\nvar Aroon =\n/** @class */\nfunction (_super) {\n  __extends(Aroon, _super);\n\n  function Aroon() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    Object.defineProperty(_this, \"_editableSettings\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: [{\n        key: \"period\",\n        name: _this.root.language.translateAny(\"Period\"),\n        type: \"number\"\n      }, {\n        key: \"upColor\",\n        name: _this.root.language.translateAny(\"Aroon up\"),\n        type: \"color\"\n      }, {\n        key: \"downColor\",\n        name: _this.root.language.translateAny(\"Aroon down\"),\n        type: \"color\"\n      }]\n    });\n    Object.defineProperty(_this, \"_themeTag\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"aroon\"\n    });\n    return _this;\n  }\n\n  Object.defineProperty(Aroon.prototype, \"_createSeries\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      return this.panel.series.push(LineSeries.new(this._root, {\n        xAxis: this.xAxis,\n        yAxis: this.yAxis,\n        valueXField: \"valueX\",\n        valueYField: \"up\",\n        fill: undefined\n      }));\n    }\n  });\n  Object.defineProperty(Aroon.prototype, \"_afterNew\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._afterNew.call(this);\n\n      this.downSeries = this.panel.series.push(LineSeries.new(this._root, {\n        xAxis: this.xAxis,\n        yAxis: this.yAxis,\n        valueXField: \"valueX\",\n        valueYField: \"down\",\n        fill: undefined\n      }));\n      this.yAxis.setAll({\n        min: -1,\n        max: 101,\n        strictMinMax: true\n      });\n    }\n  });\n  Object.defineProperty(Aroon.prototype, \"_updateChildren\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      _super.prototype._updateChildren.call(this);\n\n      if (this.isDirty(\"upColor\")) {\n        var color = this.get(\"upColor\", Color.fromHex(0x00ff00));\n\n        this._updateSeriesColor(this.series, color);\n\n        this.setCustomData(\"upColor\", color);\n      }\n\n      if (this.isDirty(\"downColor\")) {\n        var color = this.get(\"downColor\", Color.fromHex(0xff0000));\n\n        this._updateSeriesColor(this.downSeries, color);\n\n        this.setCustomData(\"downColor\", color);\n      }\n    }\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  Object.defineProperty(Aroon.prototype, \"prepareData\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      if (this.series) {\n        this.set(\"field\", \"close\");\n        var dataItems_1 = this.get(\"stockSeries\").dataItems;\n\n        var data = this._getDataArray(dataItems_1);\n\n        var period_1 = this.get(\"period\", 14);\n        var i_1 = 0;\n        $array.each(data, function (dataItem) {\n          var b = Math.max(0, i_1 - period_1);\n          var h = -Infinity;\n          var l = Infinity;\n          var li = 0;\n          var hi = 0;\n\n          for (var j = b; j <= i_1; j++) {\n            var vh = dataItems_1[j].get(\"highValueY\", 0);\n\n            if (vh >= h) {\n              h = vh;\n              hi = j;\n            }\n\n            var vl = dataItems_1[j].get(\"lowValueY\", 0);\n\n            if (vl <= l) {\n              l = vl;\n              li = j;\n            }\n          }\n\n          dataItem.up = (period_1 - (i_1 - hi)) / period_1 * 100;\n          dataItem.down = (period_1 - (i_1 - li)) / period_1 * 100;\n          i_1++;\n        });\n        this.series.data.setAll(data);\n        this.downSeries.data.setAll(data);\n      }\n    }\n  });\n  Object.defineProperty(Aroon, \"className\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"Aroon\"\n  });\n  Object.defineProperty(Aroon, \"classNames\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: ChartIndicator.classNames.concat([Aroon.className])\n  });\n  return Aroon;\n}(ChartIndicator);\n\nexport { Aroon };","map":{"version":3,"mappings":"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","names":["Color","ChartIndicator","LineSeries","$array","__extends","Object","key","name","_this","root","language","translateAny","type","panel","series","push","new","_root","xAxis","yAxis","valueXField","valueYField","fill","undefined","_super","_afterNew","call","downSeries","setAll","min","max","strictMinMax","_updateChildren","isDirty","color","get","fromHex","_updateSeriesColor","setCustomData","set","dataItems_1","dataItems","data","_getDataArray","period_1","i_1","each","dataItem","b","Math","h","Infinity","l","li","hi","j","vh","vl","up","down","classNames","concat","Aroon","className"],"sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/indicators/Aroon.ts"],"sourcesContent":["import type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport { Color } from \"../../../core/util/Color\";\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IAroonSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * Color for ups.\r\n\t */\r\n\tupColor?: Color;\r\n\r\n\t/**\r\n\t * Color for downs.\r\n\t */\r\n\tdownColor?: Color;\r\n\r\n}\r\n\r\nexport interface IAroonPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IAroonEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class Aroon extends ChartIndicator {\r\n\tpublic static className: string = \"Aroon\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([Aroon.className]);\r\n\r\n\tdeclare public _settings: IAroonSettings;\r\n\tdeclare public _privateSettings: IAroonPrivate;\r\n\tdeclare public _events: IAroonEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\t/**\r\n\t * Indicator series for downs.\r\n\t */\r\n\tdeclare public downSeries: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"upColor\",\r\n\t\tname: this.root.language.translateAny(\"Aroon up\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"downColor\",\r\n\t\tname: this.root.language.translateAny(\"Aroon down\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tprotected _themeTag: string = \"aroon\";\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"up\",\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.downSeries = this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"down\",\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\r\n\t\tthis.yAxis.setAll({ min: -1, max: 101, strictMinMax: true });\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tif (this.isDirty(\"upColor\")) {\r\n\t\t\tlet color = this.get(\"upColor\", Color.fromHex(0x00ff00));\r\n\t\t\tthis._updateSeriesColor(this.series, color);\r\n\t\t\tthis.setCustomData(\"upColor\", color);\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"downColor\")) {\r\n\t\t\tlet color = this.get(\"downColor\", Color.fromHex(0xff0000));\r\n\t\t\tthis._updateSeriesColor(this.downSeries, color);\r\n\t\t\tthis.setCustomData(\"downColor\", color);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\r\n\t\t\tthis.set(\"field\", \"close\");\r\n\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tlet data = this._getDataArray(dataItems);\r\n\t\t\tlet period = this.get(\"period\", 14);\r\n\r\n\t\t\tlet i = 0;\r\n\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\tlet b = Math.max(0, i - period);\r\n\t\t\t\tlet h = -Infinity;\r\n\t\t\t\tlet l = Infinity;\r\n\r\n\t\t\t\tlet li = 0;\r\n\t\t\t\tlet hi = 0;\r\n\r\n\t\t\t\tfor (let j = b; j <= i; j++) {\r\n\t\t\t\t\tlet vh = dataItems[j].get(\"highValueY\", 0);\r\n\t\t\t\t\tif (vh >= h) {\r\n\t\t\t\t\t\th = vh;\r\n\t\t\t\t\t\thi = j;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet vl = dataItems[j].get(\"lowValueY\", 0);\r\n\t\t\t\t\tif (vl <= l) {\r\n\t\t\t\t\t\tl = vl;\r\n\t\t\t\t\t\tli = j;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataItem.up = (period - (i - hi)) / period * 100;\r\n\t\t\t\tdataItem.down = (period - (i - li)) / period * 100;\r\n\r\n\t\t\t\ti++;\r\n\t\t\t})\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t\tthis.downSeries.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}