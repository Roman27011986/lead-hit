{"ast":null,"code":"import { getAuth } from \"../../services/auth.service\";\nimport { emailValidation, isRequired } from \"../../utils/validationRules.js\";\nexport default {\n  data() {\n    return {\n      id: \"\",\n      isValid: true,\n      error: \"\",\n      errorMessage: 'error'\n    };\n  },\n\n  methods: {\n    async handleSubmit() {\n      if (!this.isValidate(this.id, this.rules.emailValidation) || !this.isValidate(this.id, this.rules.isRequired)) {\n        return;\n      }\n\n      this.$emit(\"submit\", {\n        id: this.id\n      });\n\n      try {\n        const {\n          data\n        } = await getAuth(this.id);\n        this.$router.push({\n          name: \"analytics\"\n        });\n\n        if (data?.message) {\n          localStorage.setItem('leadhit-site-id', this.id);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    isValidate(value, cb) {\n      const {\n        hasPassed,\n        message\n      } = cb(value);\n\n      if (value && !hasPassed || !value && !hasPassed) {\n        this.error = message || this.errorMessage;\n        this.isValid = hasPassed;\n        return false;\n      }\n\n      return true;\n    },\n\n    validete(value) {\n      this.isValid = this.isValidate(value, this.rules.emailValidation);\n    }\n\n  },\n  computed: {\n    rules() {\n      return {\n        emailValidation,\n        isRequired\n      };\n    }\n\n  },\n  watch: {\n    id(v) {\n      this.validete(v);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AASA,SAASA,OAAT,QAAwB,6BAAxB;AACA,SACIC,eADJ,EAEIC,UAFJ,QAGO,gCAHP;AAIA,eAAe;EAEXC,IAAI,GAAG;IACH,OAAO;MACHC,EAAE,EAAE,EADD;MAEHC,OAAO,EAAE,IAFN;MAGHC,KAAK,EAAE,EAHJ;MAIHC,YAAY,EAAC;IAJV,CAAP;EAMH,CATU;;EAWXC,OAAO,EAAE;IACL,MAAMC,YAAN,GAAqB;MAEjB,IAAI,CAAC,KAAKC,UAAL,CAAgB,KAAKN,EAArB,EAAyB,KAAKO,KAAL,CAAWV,eAApC,CAAD,IAAyD,CAAC,KAAKS,UAAL,CAAgB,KAAKN,EAArB,EAAyB,KAAKO,KAAL,CAAWT,UAApC,CAA9D,EAA+G;QAC3G;MACJ;;MAEA,KAAKU,KAAL,CAAW,QAAX,EAAqB;QACjBR,EAAE,EAAE,KAAKA;MADQ,CAArB;;MAIA,IAAI;QACA,MAAM;UAAED;QAAF,IAAW,MAAMH,OAAO,CAAC,KAAKI,EAAN,CAA9B;QACA,KAAKS,OAAL,CAAaC,IAAb,CAAkB;UAAEC,IAAI,EAAE;QAAR,CAAlB;;QACA,IAAIZ,IAAI,EAAEa,OAAV,EAAmB;UACfC,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwC,KAAKd,EAA7C;QACJ;MACJ,CANA,CAME,OAAOE,KAAP,EAAc;QACZa,OAAO,CAACC,GAAR,CAAYd,KAAZ;MACJ;IACH,CApBI;;IAsBLI,UAAU,CAACW,KAAD,EAAQC,EAAR,EAAY;MAClB,MAAM;QAAEC,SAAF;QAAaP;MAAb,IAAyBM,EAAE,CAACD,KAAD,CAAjC;;MACA,IAAIA,KAAI,IAAK,CAACE,SAAV,IAAuB,CAACF,KAAD,IAAU,CAACE,SAAtC,EAAiD;QAC7C,KAAKjB,KAAL,GAAaU,OAAM,IAAK,KAAKT,YAA7B;QACA,KAAKF,OAAL,GAAekB,SAAf;QACA,OAAO,KAAP;MACJ;;MACA,OAAO,IAAP;IACH,CA9BI;;IAgCLC,QAAQ,CAACH,KAAD,EAAQ;MACb,KAAKhB,OAAL,GAAe,KAAKK,UAAL,CAAgBW,KAAhB,EAAuB,KAAKV,KAAL,CAAWV,eAAlC,CAAf;IACF;;EAlCI,CAXE;EAgDXwB,QAAQ,EAAE;IACNd,KAAK,GAAG;MACJ,OAAO;QACHV,eADG;QAEHC;MAFG,CAAP;IAIH;;EANK,CAhDC;EAyDXwB,KAAK,EAAE;IACHtB,EAAE,CAACuB,CAAD,EAAI;MACF,KAAKH,QAAL,CAAcG,CAAd;IACH;;EAHE;AAzDI,CAAf","names":["getAuth","emailValidation","isRequired","data","id","isValid","error","errorMessage","methods","handleSubmit","isValidate","rules","$emit","$router","push","name","message","localStorage","setItem","console","log","value","cb","hasPassed","validete","computed","watch","v"],"sourceRoot":"","sources":["D:\\lead-hit\\src\\components\\form\\AuthForm.vue"],"sourcesContent":["<template>\r\n    <form class=\"form\" @submit.prevent=\"handleSubmit\">\r\n        <input v-model=\"id\" class=\"custom-input\" :class=\"!isValid && 'custom-input--error'\" />\r\n        <span class=\"form__error-text\" v-if=\"!isValid\">{{ error }}</span>\r\n        <button class=\"form__btn\" type=\"submit\" >Войти</button>\r\n    </form>\r\n</template>\r\n\r\n<script>\r\nimport { getAuth } from \"../../services/auth.service\";\r\nimport {\r\n    emailValidation,\r\n    isRequired\r\n} from \"../../utils/validationRules.js\";\r\nexport default {\r\n\r\n    data() {\r\n        return {\r\n            id: \"\",\r\n            isValid: true,\r\n            error: \"\",\r\n            errorMessage:'error'\r\n        };\r\n    },\r\n    \r\n    methods: {\r\n        async handleSubmit() {\r\n           \r\n            if (!this.isValidate(this.id, this.rules.emailValidation) || !this.isValidate(this.id, this.rules.isRequired)) {\r\n                return\r\n            }\r\n           \r\n            this.$emit(\"submit\", {\r\n                id: this.id,\r\n            });\r\n\r\n            try {\r\n                const { data } = await getAuth(this.id);\r\n                this.$router.push({ name: \"analytics\" });\r\n                if (data?.message) {\r\n                    localStorage.setItem('leadhit-site-id', this.id )\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        },\r\n\r\n        isValidate(value, cb) {\r\n            const { hasPassed, message } = cb(value)\r\n            if (value && !hasPassed || !value && !hasPassed) {\r\n                this.error = message || this.errorMessage;\r\n                this.isValid = hasPassed\r\n                return false\r\n            } \r\n            return true\r\n        },\r\n\r\n        validete(value) {\r\n           this.isValid = this.isValidate(value, this.rules.emailValidation)\r\n        },\r\n    },\r\n\r\n    computed: {\r\n        rules() {\r\n            return {\r\n                emailValidation,\r\n                isRequired\r\n            };\r\n        },\r\n    },\r\n\r\n    watch: {\r\n        id(v) {\r\n            this.validete(v);\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n\r\n\r\n   .form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n   }\r\n   .custom-input {\r\n       min-height: 40px;\r\n        font-size: 18px;\r\n        outline: none;\r\n        line-height: inherit;\r\n        padding: 8px 15px;\r\n   }\r\n        .custom-input::placeholder {\r\n            color: inherit;\r\n        }\r\n                .custom-input--error {\r\n                    border-color: red;\r\n                }\r\n\r\n            .form__error-text {\r\n                font-size: 12px;\r\n                color: red;\r\n            }\r\n\r\n                .form__btn {\r\n                    width: 100px;\r\n                    height: 40px;\r\n                    cursor: pointer;\r\n                    border: none;\r\n                    color: #2c3e50;\r\n                    background-color: rgba(47, 144, 214, 0.228);\r\n                    margin-top: 40px;\r\n                }\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}